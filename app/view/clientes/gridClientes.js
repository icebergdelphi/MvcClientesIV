/*
 * File: app/view/clientes/gridClientes.js
 *
 * This file was generated by Sencha Architect version 3.0.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MvcClientesIV.view.clientes.gridClientes', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.gridClientes',

    requires: [
        'MvcClientesIV.view.override.clientes.gridClientes',
        'Ext.grid.View',
        'Ext.grid.column.Number',
        'Ext.button.Button',
        'Ext.toolbar.Paging',
        'Ext.toolbar.Separator'
    ],

    height: 250,
    itemId: 'gridClientes',
    width: 400,
    store: 'clientes.Clientes',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    dataIndex: 'idcliente',
                    text: 'Idcliente'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'Cliente',
                    text: 'Cliente',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'Sexo',
                    text: 'Sexo',
                    flex: 1
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'Edad',
                    text: 'Edad',
                    flex: 1,
                    format: '0'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if(value) {
                            var storeLimiteCredito =Ext.getStore('catalogos.LimiteCredito');
                            var vRecord = storeLimiteCredito.findRecord('idlimite', value);
                            return vRecord ? vRecord.get('descripcion'): vRecord.get('idlimite');
                        }
                        else {
                            return "";

                        }
                    },
                    dataIndex: 'id_limitecredito',
                    text: 'Limite credito',
                    flex: 1
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    itemId: 'mytoolbar',
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'btnAdd',
                            iconCls: 'add',
                            text: 'Agregar'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnEdit',
                            iconCls: 'edit',
                            text: 'Editar'
                        },
                        {
                            xtype: 'button',
                            disabled: true,
                            itemId: 'btnDelete',
                            iconCls: 'delete',
                            text: 'Eliminar'
                        }
                    ]
                },
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    displayInfo: true,
                    store: 'clientes.Clientes',
                    items: [
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnImprimir',
                            iconCls: 'imprimir',
                            text: 'Imprimir'
                        },
                        {
                            xtype: 'tbseparator'
                        }
                    ]
                }
            ],
            listeners: {
                selectionchange: {
                    fn: me.onGridClientesSelectionChange,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onGridClientesSelectionChange: function(model, selected, eOpts) {
        this.down('#btnDelete').setDisabled(!selected.length);//Se Habilita el Boton Delete
    }

});